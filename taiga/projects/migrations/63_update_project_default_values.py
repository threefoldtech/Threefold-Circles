# -*- coding: utf-8 -*-
# Generated by Django 1.11.22 on 2019-08-26 09:20
from __future__ import unicode_literals

from django.db import migrations, models

from taiga.projects.models import ProjectTemplate, UserStoryStatus
from taiga.users.models import Role


class Migration(migrations.Migration):
    def migrate(apps, schema_editor):
        us_statuses = [
            {"name": "New", "slug": "new", "color": "#878a84", "order": 1, "is_closed": False, "wip_limit": None,
             "is_archived": False},
            {"name": "To Start", "slug": "to-start", "color": "#1f4a87", "order": 2, "is_closed": False,
             "wip_limit": None, "is_archived": False},
            {"name": "In progress", "slug": "in-progress", "color": "#729fcf", "order": 3, "is_closed": False,
             "wip_limit": None, "is_archived": False},
            {"name": "Blocked", "slug": "blocked", "color": "#ef4049", "order": 4, "is_closed": False,
             "wip_limit": None, "is_archived": False},
            {"name": "Verification", "slug": "verification", "color": "#4f9a04", "order": 5, "is_closed": False,
             "wip_limit": None, "is_archived": False},
            {"name": "Done", "slug": "done", "color": "#8ae235", "order": 6, "is_closed": True, "wip_limit": None,
             "is_archived": False},
            {"name": "Archived", "slug": "archived", "color": "#444644", "order": 7, "is_closed": True,
             "wip_limit": None, "is_archived": True}]

        roles = [{"name": "OWNER", "slug": "owner", "order": 10, "computable": True,
                  "permissions": ["add_issue", "modify_issue", "delete_issue", "view_issues", "add_milestone",
                                  "modify_milestone", "delete_milestone", "view_milestones", "view_project", "add_task",
                                  "modify_task", "delete_task", "view_tasks", "add_us", "modify_us", "delete_us",
                                  "view_us", "add_wiki_page", "modify_wiki_page", "delete_wiki_page", "view_wiki_pages",
                                  "add_wiki_link", "delete_wiki_link", "view_wiki_links", "view_epics", "add_epic",
                                  "modify_epic", "delete_epic", "comment_epic", "comment_us", "comment_task",
                                  "comment_issue", "comment_wiki_page"]},
                 {"name": "CIRCLE MEMBER", "slug": "circle_member", "order": 20, "computable": False,
                  "permissions": ["add_issue", "modify_issue", "delete_issue", "view_issues", "view_project",
                                  "add_task", "modify_task", "delete_task", "view_tasks", "add_us", "modify_us",
                                  "delete_us", "view_us", "add_wiki_page", "modify_wiki_page", "delete_wiki_page",
                                  "view_wiki_pages", "add_wiki_link", "delete_wiki_link", "view_wiki_links",
                                  "comment_us", "comment_task", "comment_issue"]},
                 {"name": "Stakeholder", "slug": "stakeholder", "order": 30, "computable": False,
                  "permissions": ["add_issue", "modify_issue", "delete_issue", "view_issues", "view_project",
                                  "add_task", "modify_task", "delete_task", "view_tasks", "add_us", "modify_us",
                                  "delete_us", "view_us", "add_wiki_page", "modify_wiki_page", "delete_wiki_page",
                                  "view_wiki_pages", "add_wiki_link", "delete_wiki_link", "view_wiki_links",
                                  "comment_us", "comment_task", "comment_issue"]},
                 {"name": "VIEWER", "slug": "viewer", "order": 40, "computable": False,
                  "permissions": ["view_issues", "view_project", "view_us", "view_tasks", "view_wiki_links", "view_wiki_pages"]}]

        if ProjectTemplate.objects.count() > 0:
            ProjectTemplate.objects.update(us_statuses=us_statuses, roles=roles)
            UserStoryStatus.objects.filter(name='New').update(color='#878a84')
            UserStoryStatus.objects.filter(name='Ready').update(name='To Start', slug='to-start', color='#1f4a87')
            UserStoryStatus.objects.filter(name='In Progress').update(color='#729fcf')
            UserStoryStatus.objects.filter(name='Ready for test').update(color='#4f9a04', slug='verification',
                                                                         name='Verification')
            UserStoryStatus.objects.filter(name='Done').update(color='#8ae235')
            UserStoryStatus.objects.filter(name='Archived').update(color='#444644')
            UserStoryStatus.objects.filter(name='New').update(color='#878a84')

            # Update old Projects
            for x in UserStoryStatus.objects.order_by('project_id').values('project_id').distinct('project_id'):
                pid = x['project_id']
                if UserStoryStatus.objects.filter(slug='blocked', project_id=pid).count() == 0:
                    UserStoryStatus(name='BLOCKED', is_closed=False, color='#ef4049', project_id=pid, slug='blocked',
                                    is_archived=False, order=4).save()

        if Role.objects.count() > 0:
            Role.objects.filter(slug__in=['ux', 'design', 'front', 'back']).delete()

            # Update old roles
            for x in Role.objects.order_by('project_id').all().distinct('project_id'):
                pid = x.project_id
                if x.slug == 'product-owner':
                    try:
                        x.owner = 'owner'
                        x.name = 'Owner'
                        x.save()
                    except:
                        pass

                if Role.objects.filter( project_id=pid, slug='circle_member').count() == 0:
                    Role(name='CIRCLE MEMBER', computable=False,
                         permissions=["add_issue", "modify_issue", "delete_issue", "view_issues", "view_project",
                                      "add_task",
                                      "modify_task", "delete_task", "view_tasks", "add_us", "modify_us", "delete_us",
                                      "view_us",
                                      "add_wiki_page", "modify_wiki_page", "delete_wiki_page", "view_wiki_pages",
                                      "add_wiki_link", "delete_wiki_link", "view_wiki_links", "comment_us", "comment_task",
                                      "comment_issue"], project_id=pid, slug='circle_member',
                         order=20).save()

                if Role.objects.filter(project_id=pid, slug='viewer').count() == 0:
                    Role(name='VIEWER', computable=False,
                         permissions=["view_issues", "view_project", "view_us", "view_tasks", "view_wiki_links",
                                      "view_wiki_pages"], project_id=pid, slug='viewer', order=40
                        ).save()

    dependencies = [
        ('users', '0028_auto_20191119_1425'),
        ('projects', '0061_auto_20180918_1355'),
        ('projects', '0062_auto_20190826_0920')
    ]

    operations = [
        migrations.RunPython(migrate),
    ]
